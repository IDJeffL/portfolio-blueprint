import { styles } from './styles.js';
export const log = (logLevel, message, ...args) => {
    const delimeter = styles.dim(' - ');
    let logLevelMessage = styles.brand('Faust') + delimeter;
    switch (logLevel) {
        case 'info': {
            logLevelMessage += styles.info('info');
            break;
        }
        case 'warn': {
            logLevelMessage += styles.warn('warn');
            break;
        }
        case 'error': {
            logLevelMessage += styles.error('error');
            break;
        }
        default: {
            break;
        }
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, no-console
    console.log(`${logLevelMessage}${delimeter}${message}`, ...args);
};
export const infoLog = (message, ...args) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    log('info', message, ...args);
};
export const warnLog = (message, ...args) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    log('warn', message, ...args);
};
export const errorLog = (message, ...args) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    log('error', message, ...args);
};
